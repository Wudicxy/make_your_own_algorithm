# Generated by Django 5.2.4 on 2025-07-31 08:26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='公司名称')),
            ],
            options={
                'verbose_name': '公司',
                'verbose_name_plural': '公司',
            },
        ),
        migrations.CreateModel(
            name='ProblemSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='题集名称')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
            ],
            options={
                'verbose_name': '题集',
                'verbose_name_plural': '题集',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='标签名称')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='部门名称')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='question.company')),
            ],
            options={
                'verbose_name': '部门',
                'verbose_name_plural': '部门',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='岗位名称')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='question.department')),
            ],
            options={
                'verbose_name': '岗位',
                'verbose_name_plural': '岗位',
            },
        ),
        migrations.CreateModel(
            name='CompanyProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.IntegerField(default=1, verbose_name='考察频度')),
                ('last_asked', models.DateField(default=django.utils.timezone.now, verbose_name='最近考察时间')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.company')),
                ('positions', models.ManyToManyField(blank=True, to='question.position', verbose_name='相关岗位')),
            ],
            options={
                'verbose_name': '公司题目',
                'verbose_name_plural': '公司题目',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(unique=True, verbose_name='题号')),
                ('title', models.CharField(max_length=200, verbose_name='题目标题')),
                ('difficulty', models.CharField(choices=[('easy', '简单'), ('medium', '中等'), ('hard', '困难')], max_length=10, verbose_name='难度')),
                ('leetcode_url', models.URLField(blank=True, verbose_name='LeetCode链接')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('companies', models.ManyToManyField(blank=True, through='question.CompanyProblem', to='question.company', verbose_name='相关公司')),
                ('problem_sets', models.ManyToManyField(blank=True, to='question.problemset', verbose_name='题集')),
                ('tags', models.ManyToManyField(blank=True, to='question.tag', verbose_name='标签')),
            ],
            options={
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
                'ordering': ['number'],
            },
        ),
        migrations.AddField(
            model_name='companyproblem',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.problem'),
        ),
        migrations.AlterUniqueTogether(
            name='companyproblem',
            unique_together={('company', 'problem')},
        ),
        migrations.CreateModel(
            name='UserProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', '未做'), ('completed', '完成'), ('attempted', '尝试过')], default='not_started', max_length=20, verbose_name='状态')),
                ('mastery', models.IntegerField(default=0, help_text='0-5星', verbose_name='掌握程度')),
                ('notes', models.TextField(blank=True, verbose_name='笔记')),
                ('last_practice', models.DateTimeField(blank=True, null=True, verbose_name='最近练习时间')),
                ('practice_count', models.IntegerField(default=0, verbose_name='练习次数')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_records', to='question.problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户题目记录',
                'verbose_name_plural': '用户题目记录',
                'unique_together': {('user', 'problem')},
            },
        ),
    ]
